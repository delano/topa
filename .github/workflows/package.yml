name: Package

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine check-manifest

    - name: Check manifest
      run: check-manifest

    - name: Build package
      run: python -m build

    - name: Check package
      run: |
        twine check dist/*
        
    - name: List package contents
      run: |
        echo "=== Source distribution contents ==="
        tar -tzf dist/*.tar.gz
        echo ""
        echo "=== Wheel contents ==="
        unzip -l dist/*.whl

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  test-install:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        exclude:
          # Python 3.7 not available on macOS ARM64
          - os: macos-latest
            python-version: "3.7"

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Test wheel installation
      run: |
        pip install dist/*.whl
        python -c "import tpane; print(tpane.__version__ if hasattr(tpane, '__version__') else 'Import successful')"
        # Test CLI help functionality (allow non-zero exit if help is printed)
        tpane --help || test $? -eq 0 -o $? -eq 2

    - name: Test source installation
      run: |
        pip uninstall -y tpane
        pip install dist/*.tar.gz
        python -c "import tpane; print(tpane.__version__ if hasattr(tpane, '__version__') else 'Import successful')"
        # Test CLI help functionality (allow non-zero exit if help is printed)
        tpane --help || test $? -eq 0 -o $? -eq 2

  publish-test:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build, test-install]
    runs-on: ubuntu-latest
    environment: test-pypi
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build, test-install]
    runs-on: ubuntu-latest
    environment: pypi
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}